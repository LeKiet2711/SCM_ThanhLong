@page "/chitietphieunhap/{Auto_ID:int}"
@rendermode InteractiveServer
@inject PhieuNhap_Service PhieuNhap_Service
@inject ChiTietPhieuNhap_Service ChiTietPhieuNhap_Service
@inject LoThanhLong_Service LoThanhLong_Service
@inject IToastService ToastService
@inject Users_Service Users_Service
@inject Users user
@inject NavigationManager NavigationManager

<style>
    .modal {
        background-color: rgba(0, 0, 0, 0.5);
    }

    .container-content {
        margin-left: 1.5vw;
        background: white;
    }
</style>

<span class="chu-dep" style="text-align:center;font-weight:bold">Chi tiết phiếu nhập @Auto_ID</span>
<button class="btn btn-success" @onclick="OpenAddModal" style="margin-bottom:10px">
    <span class="oi oi-plus" aria-hidden="true">Thêm chi tiết phiếu nhập mới</span>
</button>

@if (dataList == null)
{
    <p><em>Loading......</em></p>
}
else
{
    <TelerikGrid Data="@dataList" Pageable="true" Sortable="true" Height="calc(100vh - 170px)" Resizable="true" Reorderable="true" Class="telerik-grid">
        <GridColumns>
            <GridColumn Field="@nameof(ChiTietPhieuNhap.MaLoSTR)" Title="Tên lô thanh long" Width="100px" />
            <GridColumn Field="@nameof(ChiTietPhieuNhap.SoKg)" Title="Số Kg" Width="100px" />
            <GridColumn Field="@nameof(ChiTietPhieuNhap.DonGia)" Title="Đơn giá" Width="100px" />
            <GridCommandColumn Width="180px">
                <GridCommandButton Command="Delete" OnClick="@DeleteItem">
                    <span class="oi oi-trash" Width="100px"></span> Xóa
                </GridCommandButton>
            </GridCommandColumn>
        </GridColumns>
    </TelerikGrid>
}

<div class="modal fade @addModalClass" tabindex="-1" role="dialog" style="@addModalDisplayStyle">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:#dedcd8">
                <h5 class="modal-title"><b>Thêm chi tiết phiếu nhập</b></h5>
                <button type="button" class="close" @onclick="CloseAddModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@ctpn" OnValidSubmit="createChiTietPhieuNhap">
                    <div class="form-group">
                        <label for="MaLo" class="control-label"><b>Mã lô hàng: </b></label>
                        <InputSelect class="form-control" @bind-Value="@ctpn.MaLo">
                            <option value="">-- Chọn lô thanh long --</option>
                            @foreach (var item in loThanhLongList)
                            {
                                <option value="@item.Auto_ID">@item.MaLo</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="form-group">
                            <label for="SoKg" class="control-label"><b>Số Kg: </b></label>
                            <InputNumber class="form-control" @bind-Value="ctpn.SoKg" />
                        <ValidationMessage For="@(()=>ctpn.SoKg)" />
                    </div>
                    <div class="form-group">
                        <label for="DonGia" class="control-label"><b>Đơn giá: </b></label>
                        <InputNumber class="form-control" @bind-Value="ctpn.DonGia" />
                        <ValidationMessage For="@(()=>ctpn.DonGia)" />
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Thêm chi tiết phiếu nhập</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="modal fade @deleteModalClass" tabindex="-1" role="dialog" style="@deleteModalDisplayStyle">
    <div class="modal-dialog model-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>Xóa phiếu nhập</b></h5>
                <button type="button" class="close" @onclick="CloseDeleteModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#dedcd8; color:brown; font-size:30px">
                <p style="color:red">Bạn có chắc chắn muốn xóa phiếu nhập này không?</p>
                <EditForm Model="@ctpn" OnValidSubmit="deleteChiTietPhieuNhap">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="ID" class="control-label">ID: </label>
                        <label><b>@ctpn.Auto_ID</b></label>
                    </div>
                    <div class="form-group">
                        <label for="MaLoSTR" class="control-label">Mã lô hàng: </label>
                        <label><b>@ctpn.MaLoSTR</b></label>
                    </div>
                    <div class="form-group">
                        <label for="SoKg" class="control-label">Số Kg: </label>
                        <label><b>@ctpn.SoKg</b></label>
                    </div>
                    <div class="form-group">
                        <label for="DonGia" class="control-label">Đơn giá: </label>
                        <label><b>@ctpn.DonGia</b></label>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Xóa phiếu nhập</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public int Auto_ID{ get; set; }

    public string PN{ get; set; }
    private List<ChiTietPhieuNhap> dataList = new List<ChiTietPhieuNhap>();
    private List<LoThanhLong> loThanhLongList = new List<LoThanhLong>();

    private PhieuNhap phieuNhap = new PhieuNhap();
    private ChiTietPhieuNhap ctpn=new ChiTietPhieuNhap();

    private string username;
    private string password;

    private string addModalClass = "";
    private string addModalDisplayStyle = "display:none";
    private string editModalClass = "";
    private string editModalDisplayStyle = "display:none";
    private string deleteModalClass = "";
    private string deleteModalDisplayStyle = "display:none";

    protected override async Task OnInitializedAsync()
    {
        try{
        user.username = "C##" + await Users_Service.GetCurrentUserName();
        user.password = await Users_Service.GetCurrentPassWord();
        dataList = await ChiTietPhieuNhap_Service.getAllData(Auto_ID);
        loThanhLongList = await LoThanhLong_Service.getAllData();
        //phieuNhap = PhieuNhap_Service.getDataByID(Auto_ID);
        }
        catch
        {
            NavigationManager.NavigateTo("/Error");
        }
    }

    private void OpenAddModal()
    {
        ctpn = new ChiTietPhieuNhap();
        addModalClass = "show";
        addModalDisplayStyle = "display:block";
    }

    private void CloseAddModal()
    {
        addModalClass = "";
        addModalDisplayStyle = "display:none";
        StateHasChanged();
    }

    private void OpenEditModal(ChiTietPhieuNhap item)
    {
        ctpn = item.Shallowcopy();
        //soPhieuNhap = item.SoPhieuNhap;

        editModalClass = "show";
        editModalDisplayStyle = "display:block";
    }

    private void CloseEditModal()
    {
        editModalClass = "";
        editModalDisplayStyle = "display:none";
        StateHasChanged();
    }

    private void OpenDeleteModal(ChiTietPhieuNhap item)
    {
        ctpn = item;
        deleteModalClass = "show";
        deleteModalDisplayStyle = "display:block";
    }

    private void CloseDeleteModal()
    {
        deleteModalClass = "";
        deleteModalDisplayStyle = "display:none";
        StateHasChanged();
    }

    private void EditItem(GridCommandEventArgs args)
    {
        var item = (ChiTietPhieuNhap)args.Item;
        OpenEditModal(item);
    }

    private void DeleteItem(GridCommandEventArgs args)
    {
        var item = (ChiTietPhieuNhap)args.Item;
        OpenDeleteModal(item);
    }

    protected async Task createChiTietPhieuNhap()
    {
            try
            {
                ctpn.SoPhieuNhap = Auto_ID;
                await ChiTietPhieuNhap_Service.addData(ctpn);
                dataList = await ChiTietPhieuNhap_Service.getAllData(Auto_ID);
                CloseAddModal();
                ToastService.ShowSuccess("Thêm chi tiết phiếu nhập thành công!");
                StateHasChanged();
            }
            catch (Exception e)
            {
                //throw e;
                ToastService.ShowError("Có lỗi xảy ra!");
            }
    }

    protected async Task deleteChiTietPhieuNhap()
    {
        try
        {
            await ChiTietPhieuNhap_Service.deleteData(ctpn.Auto_ID);
            dataList = await ChiTietPhieuNhap_Service.getAllData(Auto_ID);
            CloseDeleteModal();
            ToastService.ShowSuccess("Xóa chi tiết phiếu nhập thành công!");
            StateHasChanged();
        }
        catch (Exception e)
        {
            //throw e;
            ToastService.ShowError("Có lỗi xảy ra!");
        }
    }

}
