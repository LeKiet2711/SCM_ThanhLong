@page "/danhmuclothanhlong"
@rendermode InteractiveServer
@inject LoThanhLong_Service loThanhLong_Service
@inject IToastService ToastService
@inject Users_Service Users_Service
@inject Users user
@inject NavigationManager NavigationManager

<style>
    .modal {
        background-color: rgba(0, 0, 0, 0.5);
    }

    .qr-code {
        width: 300px;
        height: 300px;
        display: block;
        margin: 0 auto;
    }
</style>

<span class="chu-dep" style="text-align:center;font-weight:bold">Danh mục Lô Thanh Long</span>
<button class="nut-dep" @onclick="OpenAddModal" style="margin-bottom:10px; position: relative;">
    <span class="oi oi-plus" aria-hidden="true">Thêm lô thanh long mới</span>
</button>

@if (dataList == null)
{
    <p><em>Loading......</em></p>
}
else
{
    <div class="container-table-main">
        <div class="tieu-de-table">
            <span>Thông tin lô thanh long</span>
        </div>
        <div class="container-table">
            <table class="style-table">
                <thead>
                    <tr>
                        <th>Mã lô</th>
                        <th>Tên hộ trồng</th>
                        <th>Ngày thu hoạch</th>
                        <th>Trạng thái</th>
                        <th>Mô tả</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (LoThanhLong data in dataList)
                    {
                        <tr>
                            <td>@data.MaLo</td>
                            <td>@data.TenHoTrong</td>
                            <td>@data.NgayThuHoach</td>
                            <td>@data.TrangThai</td>
                            <td>@data.MoTa</td>
                            <td>
                                <button class="nut-xanh-bang" @onclick="@(()=>OpenEditModal(data))">Cập nhật</button>
                                <button class="nut-do-bang" @onclick="@(()=>OpenDeleteModal(data))">Xóa</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <TelerikGrid Data="@dataList" Pageable="true" Sortable="true" Height="calc(100vh - 170px)" Resizable="true" Reorderable="true" Class="telerik-grid">
        <GridColumns>
            <GridColumn Field="@nameof(LoThanhLong.MaLo)" Title="Mã lô" Width="100px" />
            <GridColumn Field="@nameof(LoThanhLong.TenHoTrong)" Title="Tên hộ trồng" Width="100px" />
            <GridColumn Field="@nameof(LoThanhLong.NgayThuHoach)" Title="Ngày thu hoạch" Width="100px" />
            <GridColumn Field="@nameof(LoThanhLong.TrangThai)" Title="Trạng thái" Width="100px" />
            <GridColumn Field="@nameof(LoThanhLong.MoTa)" Title="Mô tả" Width="100px" />
            <GridCommandColumn Width="180px">
                <GridCommandButton Command="Edit" OnClick="@EditItem">
                    <span class="oi oi-pencil" Width="100px"></span> Sửa
                </GridCommandButton>
                <GridCommandButton Command="Delete" OnClick="@DeleteItem">
                    <span class="oi oi-trash" Width="100px"></span> Xóa
                </GridCommandButton>
                <GridCommandButton OnClick="@GenerateQRCode">
                    <span class="oi oi-barcode" Width="100px"></span> Tạo QR Code
                </GridCommandButton>
            </GridCommandColumn>
        </GridColumns>
    </TelerikGrid>
}

<div class="modal fade @addModalClass" tabindex="-1" role="dialog" style="@addModalDisplayStyle">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>Thêm mới lô thanh long</b></h5>
                <button type="button" class="close" @onclick="CloseAddModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#dedcd8; color:brown">
                <EditForm Model="@loThanhLong" OnValidSubmit="createLoThanhLong">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="MaLo" class="control-label"><b>Mã lô: </b></label>
                        <InputText class="form-control" @bind-Value=@loThanhLong.MaLo />
                        <ValidationMessage For="@(() => loThanhLong.MaLo)" />
                    </div>
                    <div class="form-group">
                        <label for="MaHoTrong" class="control-label"><b>Mã hộ trồng: </b></label>
                        <InputSelect class="form-control" @bind-Value="@loThanhLong.HoTrongID">
                            <option value="">-- Chọn hộ trồng --</option>
                            @foreach (var item in lstHoTrong)
                            {
                                    <option value="@item.Auto_ID">@item.MaHoTrong - @item.TenHoTrong</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=>loThanhLong.HoTrongID)" />
                    </div>
                    <div class="form-group">
                        <label for="NgayThuHoach" class="control-label"><b>Ngày thu hoạch: </b></label>
                        <InputDate class="form-control" @bind-Value=@loThanhLong.NgayThuHoach format="dd/MM/yyyy" />
                        <ValidationMessage For="@(() => loThanhLong.NgayThuHoach)" />
                    </div>
                    <div class="form-group">
                        <label for="TrangThai" class="control-label"><b>Trạng thái: </b></label>
                        <InputText class="form-control" @bind-Value=@loThanhLong.TrangThai />
                        <ValidationMessage For="@(() => loThanhLong.TrangThai)" />
                    </div>
                    <div class="form-group">
                        <label for="MoTa" class="control-label"><b>Mô tả: </b></label>
                        <InputText class="form-control" @bind-Value=@loThanhLong.MoTa />
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Thêm lô thanh long</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseAddModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="modal fade @editModalClass" tabindex="-1" role="dialog" style="@editModalDisplayStyle">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>Cập nhật lô thanh long</b></h5>
                <button type="button" class="close" @onclick="CloseEditModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#dedcd8; color:brown">
                <EditForm Model="@loThanhLong" OnValidSubmit="updateLoThanhLong">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="MaLo" class="control-label"><b>Mã lô: </b></label>
                        <InputText class="form-control" @bind-Value=@loThanhLong.MaLo />
                        <ValidationMessage For="@(() => loThanhLong.MaLo)" />
                    </div>
                    <div class="form-group">
                        <label for="MaHoTrong" class="control-label"><b>Mã hộ trồng: </b></label>
                        <InputSelect class="form-control" @bind-Value="@loThanhLong.HoTrongID">
                            <option value="">-- Chọn hộ trồng --</option>
                            @foreach (var item in lstHoTrong)
                            {
                                    <option value="@item.Auto_ID">@item.MaHoTrong - @item.TenHoTrong</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=>loThanhLong.HoTrongID)" />
                    </div>
                    <div class="form-group">
                        <label for="NgayThuHoach" class="control-label"><b>Ngày thu hoạch: </b></label>
                        <InputDate class="form-control" @bind-Value=@loThanhLong.NgayThuHoach />
                        <ValidationMessage For="@(() => loThanhLong.NgayThuHoach)" />
                    </div>
                    <div class="form-group">
                        <label for="TrangThai" class="control-label"><b>Trạng thái: </b></label>
                        <InputText class="form-control" @bind-Value=@loThanhLong.TrangThai />
                        <ValidationMessage For="@(() => loThanhLong.TrangThai)" />
                    </div>
                    <div class="form-group">
                        <label for="MoTa" class="control-label"><b>Mô tả: </b></label>
                        <InputText class="form-control" @bind-Value=@loThanhLong.MoTa />
                        <ValidationMessage For="@(() => loThanhLong.MoTa)" />
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Cập nhật lô thanh long</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseEditModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="modal fade @deleteModalClass" tabindex="-1" role="dialog" style="@deleteModalDisplayStyle">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>Xóa lô thanh long</b></h5>
                <button type="button" class="close" @onclick="CloseDeleteModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#dedcd8; color:brown; font-size:30px">
                <p style="color:red">Bạn có chắc chắn muốn xóa lô thanh long này không?</p>
                <EditForm Model="@loThanhLong" OnValidSubmit="deleteLoThanhLong">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="MaLo" class="control-label">Mã lô: </label>
                        <label><b>@loThanhLong.MaLo</b></label>
                    </div>
                    <div class="form-group">
                        <label for="TenHoTrong" class="control-label">Tên hộ trồng: </label>
                        <label><b>@loThanhLong.TenHoTrong</b></label>
                    </div>
                    <div class="form-group">
                        <label for="NgayThuHoach" class="control-label">Ngày thu hoạch: </label>
                        <label><b>@loThanhLong.NgayThuHoach</b></label>
                    </div>
                    <div class="form-group">
                        <label for="TrangThai" class="control-label">Trạng thái: </label>
                        <label><b>@loThanhLong.TrangThai</b></label>
                    </div>
                    <div class="form-group">
                        <label for="MoTa" class="control-label">Mô tả: </label>
                        <label><b>@loThanhLong.MoTa</b></label>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-danger">Xóa lô thanh long</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Đóng</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="modal fade @qrModalClass" tabindex="-1" role="dialog" style="@qrModalDisplayStyle">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#2f8f3a; color:beige">
                <h5 class="modal-title"><b>QR Code</b></h5>
                <button type="button" class="close" @onclick="CloseQRModal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background:#dedcd8; color:brown">
                @if (!string.IsNullOrEmpty(loThanhLong.QRCode))
                {
                    <img src="data:image/png;base64,@loThanhLong.QRCode" class="qr-code" />
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<LoThanhLong> dataList = new List<LoThanhLong>();
    private List<HoTrong> lstHoTrong = new List<HoTrong>();
    private LoThanhLong loThanhLong = new LoThanhLong();

    private string addModalClass = "";
    private string addModalDisplayStyle = "display:none";
    private string editModalClass = "";
    private string editModalDisplayStyle = "display:none";
    private string deleteModalClass = "";
    private string deleteModalDisplayStyle = "display:none";
    private string qrModalClass = "";
    private string qrModalDisplayStyle = "display:none";

    private string maLo;

    private string username;
    private string password;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user.username = "C##" + await Users_Service.GetCurrentUserName();
            user.password = await Users_Service.GetCurrentPassWord();
            dataList = await loThanhLong_Service.getAllData();
            lstHoTrong = await loThanhLong_Service.getHoTrongData();
        }
        catch
        {
            NavigationManager.NavigateTo("/Error");
        }
    }

    private void OpenAddModal()
    {
        loThanhLong = new LoThanhLong();
        addModalClass = "show";
        addModalDisplayStyle = "display:block";
    }

    private void CloseAddModal()
    {
        addModalClass = "";
        addModalDisplayStyle = "display:none";
        StateHasChanged();
    }

    private void OpenEditModal(LoThanhLong item)
    {
        loThanhLong = item.ShallowCopy();
        maLo = item.MaLo;
        editModalClass = "show";
        editModalDisplayStyle = "display:block";
    }

    private void CloseEditModal()
    {
        editModalClass = "";
        editModalDisplayStyle = "display:none";
        StateHasChanged();
    }

    private void OpenDeleteModal(LoThanhLong item)
    {
        loThanhLong = item.ShallowCopy();
        deleteModalClass = "show";
        deleteModalDisplayStyle = "display:block";
    }

    private void CloseDeleteModal()
    {
        deleteModalClass = "";
        deleteModalDisplayStyle = "display:none";
        StateHasChanged();
    }

    private void OpenQRModal()
    {
        qrModalClass = "show";
        qrModalDisplayStyle = "display:block";
    }

    private void CloseQRModal()
    {
        qrModalClass = "";
        qrModalDisplayStyle = "display:none";
        StateHasChanged();
    }

    private void EditItem(GridCommandEventArgs args)
    {
        var item = (LoThanhLong)args.Item;
        OpenEditModal(item);
    }

    private void DeleteItem(GridCommandEventArgs args)
    {
        var item = (LoThanhLong)args.Item;
        OpenDeleteModal(item);
    }

    private async Task GenerateQRCode(GridCommandEventArgs args)
    {
        string sql = "GRANT EXECUTE ON C##Admin.GetLinkQRByLoThanhLong TO C##TET";
        await Users_Service.ExecuteSqlCommand(sql);
        var item = (LoThanhLong)args.Item;
        loThanhLong = item.ShallowCopy();
        string linkQR = await loThanhLong_Service.GetLinkQRByLoThanhLongID(loThanhLong.Auto_ID);
        using (var qrGenerator = new QRCoder.QRCodeGenerator())
        {
            var qrCodeData = qrGenerator.CreateQrCode(linkQR, QRCoder.QRCodeGenerator.ECCLevel.Q);

            // PngByteQRCode generate 
            var qrCode = new QRCoder.PngByteQRCode(qrCodeData);
            var qrCodeBytes = qrCode.GetGraphic(20);

            // Convert QR Code image to Base64 to display
            loThanhLong.QRCode = Convert.ToBase64String(qrCodeBytes);
        }

        OpenQRModal();
    }



    private async Task createLoThanhLong()
    {
        if (await loThanhLong_Service.isMaLoExist(loThanhLong, dataList, "ORACLE"))
        {
            ToastService.ShowError("Mã lô đã tồn tại!");
        }
        else
        {
            try
            {
                await loThanhLong_Service.addData(loThanhLong);
                dataList = await loThanhLong_Service.getAllData();
                CloseAddModal();
                ToastService.ShowSuccess("Thêm lô hàng thành công!");
                StateHasChanged();
            }
            catch (Exception e)
            {
                ToastService.ShowError("Có lỗi xảy ra!");
            }
        }
    }

    private async Task updateLoThanhLong()
    {
        if (await loThanhLong_Service.isMaLoExist(loThanhLong, dataList, "ORACLE"))
        {
            ToastService.ShowError("Mã lô đã tồn tại!");
        }
        else
        {
            try
            {
                await loThanhLong_Service.updateData(loThanhLong);
                dataList = await loThanhLong_Service.getAllData();
                CloseEditModal();
                ToastService.ShowSuccess("Cập nhật lô hàng thành công!");
                StateHasChanged();
            }
            catch (Exception e)
            {
                ToastService.ShowError("Có lỗi xảy ra!");
            }
        }
    }

    private async Task deleteLoThanhLong()
    {
        try
        {
            await loThanhLong_Service.deleteData(loThanhLong.Auto_ID.ToString());
            dataList = await loThanhLong_Service.getAllData();
            CloseDeleteModal();
            ToastService.ShowSuccess("Xóa lô hàng thành công!");
            StateHasChanged();
        }
        catch (Exception e)
        {
            ToastService.ShowError("Có lỗi xảy ra!");
        }
    }
}