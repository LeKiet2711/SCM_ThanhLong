@page "/xacthucchukyso"
@using SCM_ThanhLong_Group.Service
@using SCM_ThanhLong_Group.Components.Layout
@inject IToastService toastService
@rendermode InteractiveServer
@layout LoginLayout

<style>
    /* Giao diện chung */
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        
        
        background-image: url('./images/phapluat.jpg');
        background-size: cover;
       
        background-attachment: fixed;
    }

        /* Overlay để làm mờ hình nền */
        body::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5); /* Tạo hiệu ứng tối màu */
            z-index: -1;
        }

    /* Container chính */
    .container {
        background-color: rgba(255, 255, 255, 0.9); /* Làm mờ để hòa với nền */
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 600px;
        text-align: center;
    }

    /* Tiêu đề */
    h3 {
        font-size: 28px;
        color: #007bff;
        margin-bottom: 20px;
    }

    /* Form nhóm */
    .form-group {
        margin-bottom: 20px;
        text-align: left;
    }

        .form-group label {
            font-weight: bold;
            margin-bottom: 10px;
            display: block;
        }

        .form-group input[type="file"],
        .form-group input[type="text"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }

        .form-group input[type="file"] {
            padding: 5px;
        }

    /* Nút */
    .btn {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        border: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
        cursor: pointer;
    }

    .btn-success {
        background-color: #28a745;
        color: #fff;
    }

        .btn-success:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .btn-success:hover:not(:disabled) {
            background-color: #218838;
        }

    /* Kết quả xác thực */
    .result {
        margin-top: 20px;
        padding: 15px;
        border-radius: 5px;
        font-size: 18px;
    }

        .result.valid {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .result.invalid {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
</style>

<div class="container">
    <h3>Xác thực chữ ký số hóa đơn</h3>

    <!-- Upload file chữ ký -->
    <div class="form-group">
        <InputFile OnChange="UploadSignedFile" />
        <p><strong>File tải lên:</strong> @uploadedSignedFileName</p>
    </div>

    <!-- Nút xác thực chữ ký -->
    <div class="form-group">
        <button class="btn btn-success" @onclick="VerifySignature" disabled="@(uploadedSignedFile == null)">Xác thực chữ ký</button>
    </div>

    <!-- Nhập Public Key -->
    <div class="form-group">
        <label for="publicKeyText">Dán Public Key vào đây:</label>
        <InputText @bind-Value="publicKey" class="form-control" id="publicKeyText" />
    </div>

    <!-- Upload file Public Key -->
    <div class="form-group">
        <label for="publicKeyFile">Hoặc tải file key công khai (.txt):</label>
        <InputFile OnChange="UploadPublicKeyFile" class="form-control" id="publicKeyFile" />
    </div>

    <!-- Kết quả xác thực -->
    @if (isSignatureValid != null)
    {
        <div class="form-group">
            <div class="result @(isSignatureValid == true ? "valid" : "invalid")">
                @(isSignatureValid == true ? "Chữ ký hợp lệ!" : "Chữ ký không hợp lệ!")
            </div>
        </div>
    }
</div>



@code {
    private RSA_ChuKySo_Service rsaService = new RSA_ChuKySo_Service();
    private IBrowserFile uploadedSignedFile;
    private string uploadedSignedFileName;
    private bool? isSignatureValid;
    private string publicKey;
    private string uploadedPublicKeyFileName; // Dùng để lưu tên file public key đã tải lên

    private async Task UploadSignedFile(InputFileChangeEventArgs e)
    {
        uploadedSignedFile = e.File;
        uploadedSignedFileName = uploadedSignedFile.Name;
        toastService.ShowInfo($"File {uploadedSignedFileName} đã được tải lên.");
    }

    // Xử lý khi tải lên file chứa public key
    private async Task UploadPublicKeyFile(InputFileChangeEventArgs e)
    {
        var file = e.File;
        uploadedPublicKeyFileName = file.Name;

        using var memoryStream = new MemoryStream();
        await file.OpenReadStream().CopyToAsync(memoryStream);
        publicKey = System.Text.Encoding.UTF8.GetString(memoryStream.ToArray()); // Chuyển đổi nội dung file txt thành string

        toastService.ShowInfo($"Public Key từ file {uploadedPublicKeyFileName} đã được tải lên.");
    }

    // Xác thực chữ ký
    private async Task VerifySignature()
    {
        if (uploadedSignedFile == null)
        {
            toastService.ShowError("Vui lòng tải lên file đã ký!");
            return;
        }

        if (string.IsNullOrEmpty(publicKey))
        {
            toastService.ShowError("Vui lòng nhập hoặc tải lên Public Key!");
            return;
        }

        try
        {
            // Đọc nội dung file PDF đã ký
            using var memoryStream = new MemoryStream();
            await uploadedSignedFile.OpenReadStream().CopyToAsync(memoryStream);
            var signedFileContent = memoryStream.ToArray();

            // Tách chữ ký từ file
            var signature = signedFileContent[(signedFileContent.Length - 256)..];
            var fileContent = signedFileContent[0..(signedFileContent.Length - 256)].ToArray();

            // Tạo giá trị hash từ nội dung file
            var hash = rsaService.ComputeHash(fileContent);

            // Kiểm tra tính hợp lệ của chữ ký
            isSignatureValid = rsaService.VerifySignature(hash, signature, publicKey);

            toastService.ShowSuccess(isSignatureValid == true ? "Chữ ký hợp lệ!" : "Chữ ký không hợp lệ!");
        }
        catch (Exception ex)
        {
            toastService.ShowError($"Lỗi khi xác thực chữ ký: {ex.Message}");
        }
    }
}
