@page "/"
@using SCM_ThanhLong_Group.Components.Layout
@layout LoginLayout
@inject NavigationManager Navigation
@rendermode InteractiveServer
@inject IToastService ToastService
@inject Users_Service Users_Service
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage


<link href="css/login.css" rel="stylesheet" />

<PageTitle>Login</PageTitle>
<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="containerr">
        <h1>Đăng nhập</h1>
        <div class="box">
            <InputText @bind-Value="loginModel.username" class="form-control" placeholder="Tên đăng nhập"></InputText>
            <i class="fa-solid fa-user"></i>
           <ValidationMessage For="@(() =>loginModel.username)"/>
        </div>
        <div class="box">
            <InputText @bind-Value="loginModel.password" class="form-control" type="password" placeholder="Mật khẩu"></InputText>
            <i class="fa-solid fa-lock"></i>
            <ValidationMessage For="@(()=>loginModel.password)"/>
        </div>
        <button type="submit" class="btn btn-primary">Đăng nhập</button>
        <div class="register">
            <a href="Register">Đăng kí thành viên</a>
        </div>
    </div>
</EditForm>

@code {
    private Users loginModel = new Users();
    private bool isInitialized = false;

    private async Task HandleLogin()
    {
        var result = await Users_Service.AuthenticateUser(loginModel.username, loginModel.password);

        if (result)
        {
            Users_Service.currentUserName = loginModel.username;
            Users_Service.currentPassWord = loginModel.password;
            // ToastService.ShowSuccess("Đăng nhập thành công!");
            Navigation.NavigateTo("/dinhdanh");
        }
        else
        {
            ToastService.ShowError("Sai thông tin tài khoản hoặc mật khẩu!");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized)
        {
            var currentUserName = await Users_Service.GetCurrentUserName();
            var currentPassWord = await Users_Service.GetCurrentPassWord();
            if (!string.IsNullOrEmpty(currentUserName))
            {
                Navigation.NavigateTo("/");
            }
            isInitialized = true;
        }
    }
}
