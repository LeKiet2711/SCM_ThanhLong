@page "/"
@using SCM_ThanhLong_Group.Components.Layout
@layout LoginLayout
@inject NavigationManager Navigation
@rendermode InteractiveServer
@inject IToastService ToastService
@inject Users_Service Users_Service
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage

@* 
<link href="css/login.css" rel="stylesheet" />

<PageTitle>Login</PageTitle>
<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="containerr">
        <h1>Đăng nhập</h1>
        <div class="box">
            <InputText @bind-Value="loginModel.username" class="form-control" placeholder="Tên đăng nhập"></InputText>
            <i class="fa-solid fa-user"></i>
           <ValidationMessage For="@(() =>loginModel.username)"/>
        </div>
        <div class="box">
            <InputText @bind-Value="loginModel.password" class="form-control" type="password" placeholder="Mật khẩu"></InputText>
            <i class="fa-solid fa-lock"></i>
            <ValidationMessage For="@(()=>loginModel.password)"/>
        </div>
        <button type="submit" class="btn btn-primary">Đăng nhập</button>
        <div class="register">
            <a href="Register">Đăng kí thành viên</a>
        </div>
    </div>
</EditForm>
 *@

<link href="mahacss/styledangnhap.css" rel="stylesheet" />
@* <link href="css/login.css" rel="stylesheet" /> *@


<PageTitle>Login</PageTitle>

<div class="moi"></div>

<div class="giua dangky">
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        @* <div class="dangnhapcontainer"> *@
        <div class="trentrai"></div>
        @* <h1>Đăng nhập</h1> *@
        <span style="font-size: 40px; font-weight: bold; display: block; text-align: center; width: 100%;">
            Đăng
            nhập
        </span>
        @* <div class="container-input"> *@
        <InputText @bind-Value="loginModel.username" class="textbox custom-input" placeholder="Tên đăng nhập"></InputText>
        @* <input  @bind="loginModel.username" class="textbox custom-input" type="text" placeholder="Tên đăng nhập"> *@
        <i class="fa-solid fa-user"></i>
        <ValidationMessage For="@(() =>loginModel.username)" class="validate-kb" />
        @* </div> *@
        @* <div class="container-input"> *@
        <InputText @bind-Value="loginModel.password" class="textbox custom-input" type="password" placeholder="Mật khẩu"></InputText>
        <i class="fa-solid fa-lock"></i>
        <ValidationMessage For="@(()=>loginModel.password)" class="validate-kb" />
        @* </div> *@
        <button type="submit" class="nut-dang-nhap ">Đăng nhập</button>
        <div class="text-dang-ky-thanh-vien">
            <a href="Register">Đăng kí thành viên</a>
        </div>

        <div class="duoiphai"></div>
        @* </div> *@
    </EditForm>




    @*  <div class="trentrai"></div>
    <span style="font-size: 40px; font-weight: bold; display: block; text-align: center; width: 100%;">
    Đăng
    nhập
    </span>
    <h2 style="text-align: center;">Xin Chào!</h2>
    <input class="textbox custom-input" type="text" placeholder="Vui lòng nhập tên ..."> *@
    <div class="duoiphai"></div>

</div>

<div class="moi giua"></div>
<div class="moi trai"></div>

<div class="thanhlong"></div>
<div class="thanhlong2"></div>


<!-- <div class="home_homeMenuItemBorder__FwstZ"><a target="_blank" class="home_homeMenuItem__bJo0f relative"
        href="/vi/aigenerator"><span class="home_homeMenuIcon__rzXGU"><i class="liblibfont icon-a-AIGenerator_n"
                style="color: rgb(255, 255, 255); font-size: 16px;"></i></span><span
            class="home_homeMenuTitle__42ktv overflow-hidden text-ellipsis">Bộ tạo AI</span><span
            class="home_tool__0wH7Y home_action__yftZm absolute right-[1px] top-[1px]"></span></a></div> -->


<img class="nho" src="./img/decor-7-DjmEjkAr.png" alt="">
<img class="nho giuan" src="./img/decor-7-DjmEjkAr.png" alt="">

<img class="kich-thuoc" src="./img/duoi.png" alt="">
@* <img class="kich-thuoc2" src="./img/cac_trai_thanh_long.png" /> *@





@code {
    private Users loginModel = new Users();
    private bool isInitialized = false;

    private async Task HandleLogin()
    {
        var result = await Users_Service.AuthenticateUser(loginModel.username, loginModel.password);

        if (result)
        {
            Users_Service.currentUserName = loginModel.username;
            Users_Service.currentPassWord = loginModel.password;
            // ToastService.ShowSuccess("Đăng nhập thành công!");
            Navigation.NavigateTo("/validate-key");
        }
        else
        {
            ToastService.ShowError("Sai thông tin tài khoản hoặc mật khẩu!");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isInitialized)
        {
            var currentUserName = await Users_Service.GetCurrentUserName();
            var currentPassWord = await Users_Service.GetCurrentPassWord();
            if (!string.IsNullOrEmpty(currentUserName))
            {
                Navigation.NavigateTo("/");
            }
            isInitialized = true;
        }
    }
}
