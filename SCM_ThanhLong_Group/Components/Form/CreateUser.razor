@page "/create-user"
@using SCM_ThanhLong_Group.Components.Layout
@rendermode InteractiveServer
@layout LoginLayout
@inject Profile_Service profileService
@inject IJSRuntime iJsRuntime
@inject NavigationManager navigation
@inject Users user
@using System.Text.RegularExpressions

<link href="mahacss/styledangnhap.css" rel="stylesheet" />

<div class="moi"></div>

<div class="giua dangky">
    <div class="trentrai"></div>
    <span style="font-size: 40px; font-weight: bold; display: block; text-align: center; width: 100%;">
        Tạo tài khoản
    </span>

    <input class="textbox custom-input" type="text" @bind="userName" placeholder="Tên đăng nhập">
    <i class="fa-solid fa-user"></i>

    <input class="textbox custom-input" type="text" @bind="email" placeholder="vd: ten@gmail.com">

    <input class="textbox custom-input" type="text" @bind="passWord" placeholder="Mật khẩu">

    <input class="textbox custom-input" type="text" @bind="confirmPassWord" placeholder="Xác nhận mật khẩu">

    <select class="textbox custom-input" @bind="profileName">
        @foreach (string name in profiles)
        {
            <option>@name</option>
        }
    </select>


    <button @onclick="handleCreateUser" type="submit" class="nut-dang-nhap">Tạo tài khoản</button>

    <div class="text-dang-ky-thanh-vien">
        <a href="/manager-user">Trở về</a>
    </div>

    <div class="duoiphai"></div>

    <div class="duoiphai"></div>

</div>

<div class="moi giua"></div>
<div class="moi trai"></div>

<div class="thanhlong"></div>
<div class="thanhlong2"></div>




<img class="nho" src="./img/decor-7-DjmEjkAr.png" alt="">
<img class="nho giuan" src="./img/decor-7-DjmEjkAr.png" alt="">

<img class="kich-thuoc" src="./img/duoi.png" alt="">



@code {
    private List<string> profiles = new List<string>();
    private string userName { get; set; }
    private string passWord { get; set; }
    private string confirmPassWord { get; set; }
    private string profileName { get; set; }
    private string email { get; set; }
    private string errorContent { get; set; }



    protected override async Task OnInitializedAsync()
    {
        user.username = "sys";
        user.password = "sys";
        profiles = await profileService.getAllProfileName();
    }

    private async Task handleCreateUser()
    {
        errorContent = "";
      
            if (await IsValidValue())
            {
                string newUser = await profileService.CreateUser(userName, passWord, profileName, email);
                if (!string.IsNullOrEmpty(newUser))
                {
                await iJsRuntime.InvokeVoidAsync("alert", $"Tạo user thành công!\n Tên đăng nhập là: {newUser}");
                await iJsRuntime.InvokeVoidAsync("alert", $"Tên đăng nhập là: {newUser}");
                    navigation.NavigateTo("/Home");
                }
                else
                {
                    errorContent += "Lỗi tạo mới người dùng! Tên người dùng phải là không dấu\n";
                    await iJsRuntime.InvokeVoidAsync("alert", errorContent);

                }
            }


    }

    public bool IsValidEmail(string email)
    {
        string pattern = @"^[^@\s]+@[^@\s]+\.[^@\s]+$";
        Regex regex = new Regex(pattern);
        return regex.IsMatch(email);
    }

    public async Task<bool> IsValidValue()
    {
        bool result = false;
        if (string.IsNullOrEmpty(email) || string.IsNullOrEmpty(userName) || string.IsNullOrEmpty(passWord) || string.IsNullOrEmpty(profileName) || string.IsNullOrEmpty(confirmPassWord))
        {
            errorContent += "Vui lòng nhập đầy đủ thông tin";
            await iJsRuntime.InvokeVoidAsync("alert", errorContent);
        }
        else
        {
            if (!IsValidEmail(email))
            {
                errorContent += "Email không hợp lệ\n";
            }
            if (string.Compare(passWord, confirmPassWord) != 0)
            {
                errorContent += "Mật khẩu không khớp\n";
            }
            if (string.IsNullOrEmpty(profileName))
            {
                errorContent += "Chưa chọn profile";
            }
            if (errorContent != "")
            {
                await iJsRuntime.InvokeVoidAsync("alert", errorContent);
            }
            else
            {
                result = true;
            }
        }
        return result;
    }
}
