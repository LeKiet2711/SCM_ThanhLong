@page "/fga"
@inject NavigationManager NavigationManager
@inject OracleFgaService FgaService
@using SCM_ThanhLong_Group.Model
@inject Kho_Service khoService
@inject Users_Service Users_Service
@inject Users user
@inject ChucNang_Service chucNangService
@inject IToastService toastService
@inject OracleFgaService oraclefgaservice
@inject NavigationManager NavigationManager
@using Oracle.ManagedDataAccess.Client;
@using System.Data;


<link href="css/FGA.css" rel="stylesheet" />
<h3>Trình Theo Dõi Tác Động Hệ Thống FGA</h3>

<!-- Khung chứa combobox và nút -->
<div class="action-container">
    <p class="@((StatusMessage.StartsWith("Lỗi") || StatusMessage.StartsWith("Error")) ? "error" : "success")">
        @StatusMessage
    </p>
    <div>
        <label class="mau-chu" for="tableSelect">Select Table:</label>
        <select id="tableSelect" @bind="SelectedTable">
            <option value="" disabled>Select a table</option>
            @foreach (var table in Tables)
            {
                <option value="@table">@table</option>
            }
        </select>
    </div>
    <br />
    <div style="text-align: center;">
        <button @onclick="AddPolicy">Tạo Policy</button>
        <button @onclick="EnablePolicy">Bật Policy</button>
        <button @onclick="DisablePolicy">Tắt Policy</button>
        <button @onclick="DropPolicy">Xóa Policy</button>
        <button @onclick="ViewData">Xem Dữ Liệu</button>
        <button @onclick="DeleteData">Reset Data</button>
    </div>
   
</div>

<!-- Bảng hiển thị -->
@if (TableData != null && TableData.Rows.Count > 0)
{
    <table>
        <thead>
            <tr>
                @foreach (DataColumn column in TableData.Columns)
                {
                    <th>@column.ColumnName</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (DataRow row in TableData.Rows)
            {
                <tr>
                    @foreach (var item in row.ItemArray)
                    {
                        <td>@item</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else if (TableData == null)
{
    <p>No data available.</p>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        user.username = "sys";
        user.password = "sys";    
        TableData = await oraclefgaservice.FetchTableDataAsync();
    }
    private List<string> Tables = new List<string>
    {
        "HOTRONG",
        "KHUVUCTRONG",
        "KHO",
    };

    private string SelectedTable = "";



    private DataTable TableData = new DataTable();
    private string StatusMessage = "";

    private async Task AddPolicy()
    {
        string PolicyName = "FGA" + SelectedTable;
        try
        {
            if (string.IsNullOrEmpty(SelectedTable))
            {
                StatusMessage = "Hãy chọn Table mà bạn muốn theo dõi";
                return;
            }

            await oraclefgaservice.AddPolicyAsync(SelectedTable, PolicyName);
            StatusMessage = $"Khởi tạo chính sách giám sát {PolicyName} thành công";
        }
        catch (OracleException ex) when (ex.Number == 28101) // Lỗi ORA-28101
        {
            StatusMessage = $"Chính sách {PolicyName} đã tồn tại.";
            StateHasChanged();
        }
        catch (Exception ex)
        {
            StatusMessage = $"Lỗi xảy ra: {ex.Message}";
        }
       
    }

    private async Task EnablePolicy()
    {
        string PolicyName = "FGA" + SelectedTable;
        try
        {
            if (string.IsNullOrEmpty(SelectedTable))
            {
                StatusMessage = "Hãy chọn Table mà bạn muốn theo dõi";
                return;
            }

            await oraclefgaservice.EnablePolicyAsync(SelectedTable, PolicyName);
            StatusMessage = $"Bắt đầu hoạt động giám sát {PolicyName}";
        }
        catch (Exception ex)
        {
            StatusMessage = $"Error: {ex.Message}";
        }
    }

    private async Task DisablePolicy()
    {
        string PolicyName = "FGA" + SelectedTable;
        try
        {
            if (string.IsNullOrEmpty(SelectedTable))
            {
                StatusMessage = "Hãy chọn Table mà bạn muốn theo dõi";
                StateHasChanged();
                return;
            }

            await oraclefgaservice.DisablePolicyAsync(SelectedTable, PolicyName);
            StatusMessage = $"Dừng hoạt động giám sát {PolicyName}";
        }
        catch (Exception ex)
        {
            StatusMessage = $"Error: {ex.Message}";
        }
        finally
        {
            StateHasChanged(); // Đảm bảo giao diện luôn được cập nhật
        }
    }

    private async Task DropPolicy()
    {
        string PolicyName = "FGA" + SelectedTable;
        try
        {
            if (string.IsNullOrEmpty(SelectedTable))
            {
                StatusMessage = "Hãy chọn Table mà bạn muốn theo dõi";
                return;
            }

            await oraclefgaservice.DropPolicyAsync(SelectedTable, PolicyName);
            StatusMessage = $"Xóa chính sách giám sát {PolicyName} thành công";
        }
        catch (Exception ex)
        {
            StatusMessage = $"Error: {ex.Message}";
        }
    }

    private async Task ViewData()
    {
        try
        {
            
            TableData = await oraclefgaservice.FetchTableDataAsync();
        }
        catch (Exception ex)
        {
            StatusMessage = $"Error: {ex.Message}";
        }
    }
    private async Task DeleteData()
    {
        await oraclefgaservice.DeleteTableDataAsync();
        TableData = await oraclefgaservice.FetchTableDataAsync();
        try
        {
            
            StatusMessage = "Xóa dữ liệu thành công";
        }
        catch (Exception ex)
        {
            StatusMessage = $"Error: {ex.Message}";
        }
    }
}
