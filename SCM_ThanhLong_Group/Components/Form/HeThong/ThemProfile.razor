@page "/themprofile"
@rendermode InteractiveServer
@inject Profile_Service profileService
@inject NavigationManager nav
@using System.Text.RegularExpressions

@*Dùng thư viện này để bật alert*@
@inject IJSRuntime JsRuntime

<PageTitle>Thêm profile</PageTitle>



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.0/styles/monokai-sublime.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.0/highlight.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link href="css/profile.css" rel="stylesheet" />

<h3 class="chu-dep">Thêm Profile</h3>
@* Phần hiển thị thông tin profile *@

<div class="container">

    <div class="code-container">
        <button class="copy-button" onclick="copyToClipboard()">Copy</button>
        <pre><code class="language-cpp" id="code-block">

        --Thông tin các thuộc tính profile tại đây
        create profile C##@tenProfile limit
                @thuocTinhProfileHienThi

        </code></pre>
    </div>

    <script>
        function copyToClipboard() {
            var coppyButton = document.querySelector(".copy-button");
            var code = document.getElementById("code-block").innerText;
            navigator.clipboard.writeText(code).then(function () {
                coppyButton.innerText = "Đã coppy";
                coppyButton.classList.add("daCoppy");
                coppyButton.style.transform = "scale(3)";
            }).catch(function (err) {
                alert("Failed to copy text: " + err);
            });
        }

    </script>

    @* Hết phần hiển thị thông tin profile *@

    <div class="form-them-profile">



        <h3>Thêm profile</h3>
        <label for="profile-name">Tên profile</label>
        <input class="input-dep" id="profile-name" placeholder="Nhập tên profile" @bind="tenProfile" />

        <label for="profile-type">Thuộc tính profile</label>
        <select class="" id="profile-type" @bind="profileAttribute">
            <option value="CPU_PER_SESSION" selected>CPU_PER_SESSION</option>
            <option value="SESSIONS_PER_USER">SESSIONS_PER_USER</option>
            <option value="CONNECT_TIME">CONNECT_TIME</option>
            <option value="IDLE_TIME">IDLE_TIME</option>
            <option value="LOGICAL_READS_PER_SESSION">LOGICAL_READS_PER_SESSION</option>
            <option value="PRIVATE_SGA">PRIVATE_SGA</option>
            <option value="CPU_PER_CALL">CPU_PER_CALL</option>
            <option value="LOGICAL_READS_PER_CALL">LOGICAL_READS_PER_CALL</option>
            <option value="FAILED_LOGIN_ATTEMPTS">FAILED_LOGIN_ATTEMPTS</option>
            <option value="PASSWORD_LOCK_TIME">PASSWORD_LOCK_TIME</option>
            <option value="PASSWORD_LIFE_TIME">PASSWORD_LIFE_TIME</option>
            <option value="PASSWORD_GRACE_TIME">PASSWORD_GRACE_TIME</option>
            <option value="PASSWORD_REUSE_TIME">PASSWORD_REUSE_TIME</option>
            <option value="PASSWORD_VERIFY_FUNCTION">PASSWORD_VERIFY_FUNCTION</option>
        </select>

        <label class="khanhbang" for="limit">Vui lòng nhập số giới hạn</label>
        <input class="input-dep" id="limit" type="number" min="1" @bind="value" />

        <button class="nut-dep" @onclick="addAProfileAttribute" >Thêm vào danh mục profile</button>


        <button class="nut-dep" @onclick="taoProfile" >
            Lưu
        </button>
    </div>

</div>

@code {
    private string khanhBang = "";

    private string tenProfile { get; set; }

    private string value { get; set; }
    private string profileAttribute { get; set; }

    private string thuocTinhProfile = "";
    private string thuocTinhProfileHienThi = "";


    private async void addAProfileAttribute()
    {
        string profileAttribute = this.profileAttribute;
        string value = this.value;
        if(!string.IsNullOrEmpty(value)&&!string.IsNullOrEmpty(profileAttribute))
        {
            if(thuocTinhProfile.Contains(profileAttribute))
            {
                int index = thuocTinhProfile.IndexOf(profileAttribute)+1;
                if (index != -1)
                {
                    string pattern = @"(" + profileAttribute + @"\s+)\d+";
                    thuocTinhProfile = Regex.Replace(thuocTinhProfile, pattern, $"${{1}}{value}");
                    thuocTinhProfileHienThi = Regex.Replace(thuocTinhProfile, pattern, $"${{1}}{value}");
                }
            }
            else
            {
                thuocTinhProfile += profileAttribute + " " + value + " ";
                thuocTinhProfileHienThi += profileAttribute + " " + value + "\n\t ";
            }
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Vui lòng nhập hạn mức profile!");
        }
    }

    private async void taoProfile()
    {
        if (!String.IsNullOrEmpty(thuocTinhProfile))
        {
            if (await profileService.createProfile(tenProfile, thuocTinhProfile))
            {
                await JsRuntime.InvokeVoidAsync("alert", $"Tạo profile {tenProfile} thành công!");
                nav.NavigateTo("quanlyprofile");
            }
            else
            {
                await JsRuntime.InvokeVoidAsync("alert", "Tạo profile thất bại!");
            }
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Vui lòng nhập đầy đủ thông tin hợp lệ cho profile!");
        }
    }

}


