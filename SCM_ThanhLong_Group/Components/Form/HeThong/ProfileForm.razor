@page "/quanlyprofile"
@rendermode InteractiveServer
@inject Profile_Service profile_Service
@inject IToastService ToastService
@inject Users user

@inject NavigationManager nav
@inject IJSRuntime iJSRuntime


<style>
    .modal {
    background-color: rgba(0, 0, 0, 0.5);
    }
</style>

@if (dataList == null)
{
    <p><em>Loading......</em></p>
}
else
{
    <div class="container-table-main">
        <div class="tieu-de-table">
            <span>Thông tin các profile trong hệ thống</span>
        </div>
        <div class="container-table">
            <table class="style-table">
                <thead>
                    <tr>
                        <th>Profile Name</th>
                        <th>Resource Name</th>
                        <th>Resource Type</th>
                        <th>Limit</th>
                        <th>Common</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Profile p in dataList)
                    {
                        <tr>
                            <td>@p.ProfileName</td>
                            <td>@p.ResourceName</td>
                            <td>@p.ResourceType</td>
                            <td>@p.Limit</td>
                            <td>@p.Common</td>
                            <td>
                                <button class="nut-xanh-bang" @onclick="@(()=>UpdateProfile(p))">Cập nhật</button>

                                <button class="nut-do-bang" @onclick="@(()=>DropProfile(p))">Xóa</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>




    <button class="nut-dep" @onclick="themProfile">Thêm Profile</button>
    <button class="nut-dep" @onclick="assignProfile">Gán Profile cho user</button>

}


@code {
    private List<Profile> dataList = new List<Profile>();

    protected override async Task OnInitializedAsync()
    {
        user.username = "sys";
        user.password = "sys";
        dataList = await profile_Service.GetAllProfilesSP();
    }

    protected void themProfile()
    {
        nav.NavigateTo("themprofile");
    }

    protected void assignProfile()
    {
        nav.NavigateTo("assignprofile");
    }

    // protected void updateProfile()
    // {
    //     nav.NavigateTo("capnhatprofile");
    // }

    protected void UpdateProfile(Profile profileName)
    {
        //Truyền chuỗi với các ký tự đặc biệt
        string name = profileName.ProfileName;
        string encodedData = Uri.EscapeDataString(profileName.ProfileName);
        nav.NavigateTo($"/capnhatprofile?data={encodedData}");
    }

    protected async void DropProfile(Profile profileName)
    {
        bool result = await profile_Service.DropProfile(profileName.ProfileName);
        if(result)
        {
            await iJSRuntime.InvokeVoidAsync("alert", "Xóa thành công");
            dataList = await profile_Service.GetAllProfilesSP();
            StateHasChanged();
        }
        else
        {
            await iJSRuntime.InvokeVoidAsync("alert", "Xóa thất bại hoặc profile chưa tồn tại!!!");
        }
    }
}
