@page "/reportnhapkho/{NHAPKHO_ID}"
@inject PhieuNhap_Service phieuNhapService

<style>
    .modal {
        background-color: rgba(0, 0, 0, 0.5);
    }

    .container-content {
        margin-left: 1.5vw;
        background: white;
    }
</style>

<PageTitle>Report Viewer</PageTitle>

<ReportViewer ServiceUrl="/api/reports"
              @bind-ReportSource="@ReportSource"
              @bind-ScaleMode="@ScaleMode"
              @bind-ViewMode="@ViewMode"
              @bind-ParametersAreaVisible="@ParametersAreaVisible"
              @bind-DocumentMapVisible="@DocumentMapVisible"
              @bind-Scale="@Scale"
              PageMode="@PageMode.ContinuousScroll"
              PrintMode="@PrintMode.AutoSelect"
              KeepClientAlive="true"
              EnableSendEmail="true"
              ServiceType="@ReportViewerServiceType.REST"
              Height="900px"
              Width="100%">
    <ReportViewerSettings>
        <SendEmailDialogSettings From="lgklgk2711@gmail.com"
                                 Cc=""
                                 Subject="Hóa đơn"
                                 Body="@EmailBody">
        </SendEmailDialogSettings>
    </ReportViewerSettings>
</ReportViewer>

<button class="btn btn-primary d-flex align-items-center" onclick="location.href='nguoiguichukyso'">
    <span aria-hidden="true"></span> Chuyển đến trang ký số
</button>

@code {
    public ScaleMode ScaleMode { get; set; } = ScaleMode.Specific;
    public ViewMode ViewMode { get; set; } = ViewMode.Interactive;
    public bool ParametersAreaVisible { get; set; }
    public bool DocumentMapVisible { get; set; }
    public double Scale { get; set; } = 1.0;
    public decimal SoTien;
    public string SoTienBangChu;
    public DateTime Date;
    public string SoPhieuNhap;

    [Parameter]
    public string NHAPKHO_ID { get; set; }

    public string EmailBody { get; set; }

    public ReportSourceOptions ReportSource { get; set; } = new ReportSourceOptions("ReportPhieuNhap_1.trdp", new Dictionary<string, object>
    {
        // Add parameters if applicable
    });

    protected override async Task OnInitializedAsync()
    {
        SoTien = await phieuNhapService.TinhTongTienPhieuNhap(Int32.Parse(NHAPKHO_ID));
        SoPhieuNhap = await phieuNhapService.GetSoPhieuNhapById(Int32.Parse(NHAPKHO_ID));
        SoTienBangChu = chuyenSoSangChu((double)SoTien);
        Date = DateTime.Now;
        ReportSource.Parameters.Add("NHAPKHO_ID", NHAPKHO_ID);
        ReportSource.Parameters.Add("SoTien", SoTienBangChu);
        ReportSource.Parameters.Add("SoPhieu", SoPhieuNhap);
        EmailBody = $"Hóa đơn phiếu nhập {SoPhieuNhap} ngày {Date.ToString("dd/MM/yyyy")}";
    }

    static string chuyenSoSangChu(double number)
    {
        if (number == 0)
            return "Không";

        string[] donVi = { "", "mươi", "trăm", "nghìn", "triệu", "tỷ" };
        string[] so = { "không", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín" };

        string strNumber = number.ToString();
        string result = "";

        for (int i = 0; i < strNumber.Length; i++)
        {
            int num = int.Parse(strNumber[i].ToString());
            int pos = strNumber.Length - i - 1;

            if (num != 0)
            {
                if (num == 1 && (pos % 3 == 1 || pos == 0))
                    result += "mười ";
                else if (num == 5 && pos == 0)
                    result += "lăm ";
                else
                    result += so[num] + " ";
            }

            if (pos % 3 != 0)
                result += donVi[pos % 3] + " ";
            else if (pos > 0)
                result += donVi[3 + pos / 3] + " ";
        }

        return result.Trim();
    }
}
